# -*- coding: utf-8 -*-
"""数値微分.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1az-eWuBn8pxc3kSFRn6o_-_1ByxYk3nY
"""

import numpy as np
import matplotlib.pylab as plt

#数値微分(xの時の微分を求めることができる)
def numerical_diff(f, x):
  h = 1e-4 #0.0001
  slope = (f(x + h) - f(x - h)) / 2*h  # 接線の傾き
  return slope

def function_1(x):
  return 0.01*x**2 + 0.1*x

x = np.arange(0.0, 20.0, 0.1)#0から20まで、0.1刻みのx配列
y = function_1(x)
plt.xlabel("x")
plt.ylabel("y")
plt.plot(x, y)
plt.show()

#x=5のとき
numerical_diff(function_1, 5)

#x=10
numerical_diff(function_1, 10)

x = np.arange(0.0, 20.0, 0.1)#0から20まで、0.1刻みのx配列
y = function_1(x)
plt.xlabel("x")
plt.ylabel("y")
plt.plot(x, y)
plt.show()

def function_1(x):
  return 0.01*x**2 + 0.1*x

def tangent_line(f, x0):
    h = 1e-6  # 微小な値
    slope = (f(x0 + h) - f(x0)) / h  # 接線の傾き
    intercept = f(x0) - slope * x0  # 接線の切片
    return slope, intercept

x = np.linspace(0.0, 20.0, 0.1)  # xの範囲を指定
y = f(x)  # 関数の値を計算

x0 = 2  # 接線を求める点のx座標
slope, intercept = tangent_line(f, x0)  # 接線の傾きと切片を計算
tangent = slope * x + intercept  # 接線の値を計算

plt.plot(x, y, label='Function')  # 関数を描画
plt.plot(x, tangent, label='Tangent at x = {}'.format(x))  # 接線を描画

plt.legend()  # 凡例を表示
plt.xlabel('x')  # x軸のラベル
plt.ylabel('y')  # y軸のラベル
plt.title('Tangent Line')  # グラフのタイトル
plt.grid(True)  # グリッド線を表示
plt.show()  # グラフを表示

import matplotlib.pyplot as plt
def function_1(x):
  return 0.01*x**2 + 0.1*x

#数値微分(xの時の微分を求めることができる)
def numerical_diff(f, x):
  h = 1e-4 #0.0001
  slope = (f(x + h) - f(x - h)) / 2*h  # 接線の傾き
  intercept = f(x) - slope * x  # 接線の切片
  return slope, intercept

x = np.linspace(-5, 5, 100)  # xの範囲を指定
y = function_1(x)  # 関数の値を計算

x = 5  # 接線を求める点のx座標
slope, intercept = tangent_line(function_1, x)  # 接線の傾きと切片を計算
tangent = slope * x + intercept  # 接線の値を計算

plt.plot(x, y, label='Function')  # 関数を描画
plt.plot(x, tangent, label='Tangent at x = {}'.format(x))  # 接線を描画

plt.legend()  # 凡例を表示
plt.xlabel('x')  # x軸のラベル
plt.ylabel('y')  # y軸のラベル
plt.title('Tangent Line')  # グラフのタイトル
plt.grid(True)  # グリッド線を表示
plt.show()  # グラフを表示

import numpy as np
import matplotlib.pyplot as plt

def function_1(x):
    return 0.01*x**2 + 0.1*x

def numerical_diff(f, x):
    h = 1e-4
    slope = (f(x + h) - f(x - h)) / (2 * h)
    intercept = f(x) - slope * x
    return slope, intercept

x = np.linspace(-10, 10, 100)
y = function_1(x)

x0 = 5
slope, intercept = numerical_diff(function_1, x0)
tangent = slope * x + intercept

plt.plot(x, y, label='Function')
plt.plot(x, tangent, label='Tangent at x = {}'.format(x0))

plt.legend()
plt.xlabel('x')
plt.ylabel('y')
plt.title('Tangent Line')
plt.grid(True)
plt.show()

